{"version":3,"sources":["styles/theme.js","components/ApiCredentialForm.js","services/bitmex.js","services/calcs.js","components/Portfolio.js","pages/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["base","palette","primary","main","secondary","success","error","overrides","MuiPaper","root","borderRadius","padding","props","square","typography","htmlFontSize","fontFamily","join","h1","fontSize","h2","h3","h4","h5","h6","themes","type","background","default","paper","mapValues","theme","merge","ApiCredentialForm","open","onChange","onSubmit","initialValues","React","useState","apiKey","setKey","apiSecret","setSecret","ExpansionPanel","expanded","e","b","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","variant","ExpansionPanelDetails","style","width","gutterBottom","preventDefault","TextField","value","currentTarget","label","fullWidth","size","textAlign","Button","color","baseURL","domain","instance","axios","create","getBitmexSignature","secret","message","console","debug","hex","stringify","hmacSHA","signBitmex","config","method","url","data","query","postBody","expires","Date","getTime","params","URLSearchParams","forEach","v","k","append","toString","JSON","string","toUpperCase","signature","set","proxy","bitmex","auth","c","then","r","calcBitmexDailyPerformance","history","map","x","walletBalance","amount","balances","transfers","dateKey","balanceKey","dates","sort","a","p","i","current","currentMs","previousMs","get","transfersInPeriod","filter","ms","withdrawal","sumBy","deposit","endValue","NaN","startValue","netFlow","Math","abs","balance","change","date","flow","calculatePeriodPerformance","uniqBy","transactType","transactTime","setUTCHours","includes","changeOverPeriodEnd","returns","periods","length","reduce","changeOverSubPeriods","slice","formatDate","format","PerformanceChart","off","dataMax","max","performance","dataMin","min","gradientOffset","useTheme","text","tooltipColor","getContrastText","green","red","Performance","strokeDasharray","dataKey","tickFormatter","angle","position","textAnchor","fill","contentStyle","formatter","toFixed","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","strokeWidth","dot","fillOpacity","activeDot","MovingAverage","d","return","sevenMA","unit","labelStyle","MarginAllocation","colors","dark","light","nameKey","allocation","labelLine","outerRadius","entry","index","key","align","verticalAlign","layout","instrument","payload","percent","useStyles","makeStyles","paperMessage","height","spacing","breakpoints","up","heading","descriptionBox","StyledReturn","fontWeight","isNumber","Number","isNaN","Portfolio","fetching","walletHistory","classes","Paper","className","Grid","container","justify","alignContent","item","CircularProgress","daily","aum","kurtosis","sampleKurtosis","returnLast30Days","returnLast7Days","sharpe","periodRiskFreeRate","excessReturns","mean","sampleStandardDeviation","sharpeRatio","riskFreeRate","sortino","squaredDownsideReturn","sqrt","sortinoRatio","skewness","sampleSkewness","runningChange","changeRunning","ma","start","end","movingWindow","movingAverage","marginSum","margin","maintMargin","symbol","alignItems","xs","md","Divider","Hidden","mdUp","TableContainer","Table","aria-label","TableBody","name","TableRow","TableCell","component","scope","MainPage","state","isAuthOpen","credentials","handleAuthPanelChange","bind","handleSubmit","newState","this","setState","prev","Promise","all","catch","Container","maxWidth","Component","withStyles","App","isDarkTheme","setTheme","createMuiTheme","THEME_DARK","THEME_LIGHT","CssBaseline","AppBar","Toolbar","Tooltip","title","IconButton","onClick","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fe95468.chunk.js","sourcesContent":["import mapValues from \"lodash/mapValues\";\nimport merge from \"lodash/merge\";\n\nconst base = {\n  palette: {\n    primary: {\n      main: \"#fe9526\",\n    },\n    secondary: {\n      main: \"#ffcc30\",\n    },\n    success: {\n      main: \"#53d86a\",\n    },\n    error: {\n      main: \"#fd3d39\",\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        borderRadius: \"1px\",\n        padding: \"8px\",\n      },\n    },\n  },\n  props: {\n    MuiPaper: {\n      // elevation: 0,\n      square: true,\n    },\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontFamily: [\"Open Sans\", \"Arial\", \"sans-serif\"].join(\",\"),\n    h1: {\n      fontSize: \"2.986rem\",\n    },\n    h2: {\n      fontSize: \"2.488rem\",\n    },\n    h3: {\n      fontSize: \"2.074rem\",\n    },\n    h4: {\n      fontSize: \"1.728rem\",\n    },\n    h5: {\n      fontSize: \"1.44rem\",\n    },\n    h6: {\n      fontSize: \"1.2rem\",\n    },\n  },\n};\n\nconst themes = {};\n\nthemes.THEME_LIGHT = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nthemes.THEME_DARK = {\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#0d1c2e\",\n      paper: \"#162a3f\",\n    },\n  },\n};\n\nexport default mapValues(themes, (theme) => merge(theme, base));\n","import React from \"react\";\n\nimport {\n  Button,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst ApiCredentialForm = ({\n  open,\n  onChange,\n  onSubmit,\n  initialValues = {},\n}) => {\n  const [apiKey, setKey] = React.useState(initialValues.apiKey || \"\");\n  const [apiSecret, setSecret] = React.useState(initialValues.apiSecret || \"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ apiKey, apiSecret });\n  };\n  return (\n    <ExpansionPanel expanded={open} onChange={(e, b) => onChange(b)}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography variant=\"h4\">API Credentials</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <div style={{ width: \"100%\" }}>\n          <Typography gutterBottom>\n            These credentials stay in your browser and won't be saved anywhere.\n          </Typography>\n          <Typography gutterBottom variant=\"body2\">\n            The API signature is calculated by the browser so that the API\n            secret never needs to be shared.\n          </Typography>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <TextField\n              id=\"apiKey\"\n              value={apiKey}\n              onChange={(e) => setKey(e.currentTarget.value)}\n              label=\"Bitmex API ID\"\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n            />\n            <br />\n            <br />\n            <TextField\n              id=\"apiSecret\"\n              value={apiSecret}\n              onChange={(e) => setSecret(e.currentTarget.value)}\n              label=\"Bitmex API Secret\"\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n            />\n            <br />\n            <br />\n            <div style={{ textAlign: \"right\" }}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Update\n              </Button>\n            </div>\n          </form>\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport default ApiCredentialForm;\n","import axios from \"axios\";\nimport hex from \"crypto-js/enc-hex\";\nimport hmacSHA from \"crypto-js/hmac-sha256\";\nimport forEach from \"lodash/forEach\";\nimport set from \"lodash/set\";\n\nconst apiRoot = \"/api/v1\";\nconst domain = \"https://www.bitmex.com\";\n// : 'https://testnet.bitmex.com';\nconst baseURL = domain + apiRoot;\n\nexport const instance = axios.create();\n\nexport function getBitmexSignature(secret, message) {\n  console.debug(\"Bitmex signature message: \", message);\n  return hex.stringify(hmacSHA(message, secret));\n}\n\nexport const signBitmex = (config, { apiKey, apiSecret } = {}) => {\n  // Don't do anything is no authentication provided\n  if (!apiSecret || !apiKey) {\n    return config;\n  }\n\n  const { method = \"GET\", url, data } = config;\n\n  let query = \"\";\n  let postBody = \"\";\n\n  // This code uses the 'expires' scheme. You can also use the 'nonce' scheme. See\n  // https://www.bitmex.com/app/apiKeysUsage for more details.\n  const expires = new Date().getTime() + 60 * 1000; // 1 min in the future\n\n  if (config.params) {\n    const params = new URLSearchParams();\n    forEach(config.params, (v, k) => params.append(k, v));\n    query = `?${params.toString()}`;\n  }\n  if (config.data) {\n    /* Pre-compute the reqBody so we can be sure that we're using *exactly*\n        the same body in the request and in the signature. If you don't do this,\n        you might get differently-sorted keys and blow the signature */\n    postBody = JSON.stringify(data);\n  }\n\n  const string =\n    method.toUpperCase() + apiRoot + url + query + expires + postBody;\n  const signature = getBitmexSignature(apiSecret, string);\n\n  set(config, [\"headers\", \"api-expires\"], expires);\n  set(config, [\"headers\", \"api-signature\"], signature);\n  set(config, [\"headers\", \"api-key\"], apiKey);\n\n  // Fix for fix in axios. Axios will not url encode : in query parameters for ui\n  set(config, [\"url\"], `${config.url}${query}`);\n  delete config.params; // eslint-disable-line no-param-reassign\n  return config;\n};\n\nconst proxy = \"https://thingproxy.freeboard.io/fetch/\";\nconst bitmex = (config, auth = {}) => {\n  const c = signBitmex(config, auth);\n  c.url = `${proxy}${baseURL}${c.url}`;\n  return instance(c).then((r) => r.data);\n};\nexport default bitmex;\n","import get from \"lodash/get\";\nimport filter from \"lodash/filter\";\nimport sumBy from \"lodash/sumBy\";\nimport uniqBy from \"lodash/uniqBy\";\nimport { mean, sampleStandardDeviation } from \"simple-statistics\";\n\n// Based on https://en.wikipedia.org/wiki/Simple_Dietz_method\nexport const calculatePeriodPerformance = (\n  { balances, transfers },\n  { dateKey = \"transactTime\", balanceKey = \"walletBalance\" } = {}\n) => {\n  // Take date to be the END of the period\n  const dates = balances\n    // Sort first as it happens in place, datas and balances order matches\n    .sort(\n      (a, b) => new Date(a[dateKey]).getTime() - new Date(b[dateKey]).getTime()\n    )\n    .map((x) => x[dateKey]);\n\n  return dates.map((p, i) => {\n    const current = new Date(p);\n    const currentMs = current.getTime();\n\n    const previous = new Date(get(dates, [i - 1], 0));\n    const previousMs = previous.getTime();\n\n    const transfersInPeriod = transfers.filter((x) => {\n      const ms = new Date(x[dateKey]).getTime();\n      return ms - previousMs > 0 && ms - currentMs <= 0;\n    });\n\n    const withdrawal = sumBy(\n      filter(transfersInPeriod, (x) => x.amount < 0),\n      \"amount\"\n    );\n\n    const deposit = sumBy(\n      filter(transfersInPeriod, (x) => x.amount > 0),\n      \"amount\"\n    );\n\n    const endValue = get(balances, [i, balanceKey], NaN);\n    const startValue = i === 0 ? 0 : get(balances, [i - 1, balanceKey], NaN);\n\n    const netFlow = deposit - Math.abs(withdrawal);\n\n    const change =\n      (endValue - startValue - netFlow) / (startValue + 0.5 * netFlow);\n\n    return {\n      balance: endValue,\n      change,\n      date: current,\n      deposit,\n      flow: netFlow,\n      withdrawal: Math.abs(withdrawal)\n    };\n  });\n};\n\nexport const calcBitmexDailyPerformance = (data) => {\n  const history = data.map((x) => ({\n    ...x,\n    walletBalance: x.walletBalance / 1e8,\n    amount: x.amount / 1e8,\n  }));\n\n  const balances = uniqBy(\n    history.filter((x) => x.transactType === \"RealisedPNL\"),\n    (x) => new Date(x.transactTime).setUTCHours(12, 0, 0, 0)\n  );\n\n  const transfers = history.filter((x) =>\n    [\"Deposit\", \"Withdrawal\", \"AffiliatePayout\"].includes(x.transactType)\n  );\n\n  return calculatePeriodPerformance(\n    {\n      balances,\n      transfers,\n    },\n    { dateKey: \"transactTime\", balanceKey: \"walletBalance\" }\n  );\n};\n\nexport const movingWindow = (data, size) =>\n  data.map((v, index) => {\n    // Add one to handle zero-index array\n    const start = index + 1 - size;\n\n    // Array.slice end is not inclusive so add 1\n    const end = index + 1;\n\n    // If there isn't enough data points return nothing\n    if (start < 0) {\n      return [];\n    }\n\n    return data.slice(start, end);\n  });\n\nexport const movingAverage = (data, size) =>\n  movingWindow(data, size).map((x) => (x.length === 0 ? NaN : mean(x)));\n\nexport const changeOverSubPeriods = (returns) =>\n  returns.reduce((r, c) => (c + 1) * r, 1) - 1;\n\nexport const changeOverPeriodEnd = (returns, periods) => {\n  const length = returns.length;\n  if (length < periods) {\n    return NaN;\n  }\n  return changeOverSubPeriods(returns.slice(-periods));\n};\n\nexport const changeRunning = (returns) => {\n  let runningChange = 0;\n  return returns.map((c) => {\n    runningChange = (runningChange + 1) * (c + 1) - 1;\n    return runningChange;\n  });\n};\n\nexport const sharpeRatio = (returns, periodRiskFreeRate = 0) => {\n  const excessReturns = returns.map((r) => r - periodRiskFreeRate);\n  return mean(excessReturns) / sampleStandardDeviation(returns);\n};\n\nexport const sortinoRatio = (returns, periodRiskFreeRate = 0) => {\n  const excessReturns = returns.map((r) => r - periodRiskFreeRate);\n  const squaredDownsideReturn = returns.map(\n    (r) => Math.min(r, 0) * Math.min(r, 0)\n  );\n  return mean(excessReturns) / Math.sqrt(mean(squaredDownsideReturn));\n};\n","import React from \"react\";\nimport sumBy from \"lodash/sumBy\";\nimport isNumber from \"lodash/isNumber\";\nimport IconError from \"@material-ui/icons/ErrorOutline\";\nimport {\n  Divider,\n  CircularProgress,\n  Grid,\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Cell,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { format } from \"date-fns\";\nimport {\n  calcBitmexDailyPerformance,\n  changeOverPeriodEnd,\n  changeRunning,\n  movingAverage,\n  sharpeRatio,\n  sortinoRatio,\n} from \"../services/calcs\";\n\nimport { sampleKurtosis, sampleSkewness } from \"simple-statistics\";\n\nconst formatDate = (date) => format(date, \"yyyy-MM-dd\");\n\nconst PerformanceChart = ({ data }) => {\n  const gradientOffset = () => {\n    const dataMax = Math.max(...data.map((i) => i.performance * 100));\n    const dataMin = Math.min(...data.map((i) => i.performance * 100));\n\n    if (dataMax <= 0) {\n      return 0;\n    } else if (dataMin >= 0) {\n      return 1;\n    } else {\n      return dataMax / (dataMax - dataMin);\n    }\n  };\n\n  const off = gradientOffset();\n  const theme = useTheme();\n  const text = theme.palette.text.primary;\n  const tooltipColor = theme.palette.getContrastText(\"#fff\");\n  const green = theme.palette.success.main;\n  const red = theme.palette.error.main;\n  const color = theme.palette.primary.main;\n  return (\n    <ResponsiveContainer>\n      <AreaChart\n        data={data.map((x) => ({\n          date: x.date,\n          Performance: x.performance * 100,\n        }))}\n        // margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis\n          tickFormatter={(x) => `${x}%`}\n          label={{\n            value: \"Performance\",\n            angle: -90,\n            position: \"insideLeft\",\n            style: { textAnchor: \"middle\", fill: text },\n          }}\n        />\n\n        <Tooltip\n          contentStyle={{ color: tooltipColor }}\n          formatter={(x) => `${x.toFixed(2)}%`}\n        />\n        <Legend />\n        <defs>\n          <linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset={off} stopColor={green} stopOpacity={1} />\n            <stop offset={off} stopColor={red} stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <Area\n          type=\"monotoneX\"\n          dataKey=\"Performance\"\n          // activeDot={{ r: 8 }}\n          fill=\"url(#splitColor)\"\n          stroke={color}\n          strokeWidth={2}\n          dot={{\n            stroke: color,\n            fill: color,\n            fillOpacity: 1,\n          }}\n          activeDot={{ r: 8 }}\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst MovingAverage = ({ data }) => {\n  const theme = useTheme();\n  const text = theme.palette.text.primary;\n  const tooltipColor = theme.palette.getContrastText(\"#fff\");\n  const color = theme.palette.primary.main;\n  const d = data.map((x) => ({\n    date: x.date,\n    return: x.sevenMA * 100,\n  }));\n  return (\n    <ResponsiveContainer>\n      <LineChart\n        // syncId=\"time-series\"\n        data={d}\n        // margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\n      >\n        <CartesianGrid strokeDasharray=\"2 2\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis\n          // domain={[-100, 200]}\n          // domain={['dataMin', 'dataMax']}\n          unit=\"%\"\n          label={{\n            value: \"Annualised Return\",\n            angle: -90,\n            position: \"insideLeft\",\n            style: { textAnchor: \"middle\", fill: text },\n          }}\n        />\n        <Tooltip\n          labelStyle={{ color: tooltipColor }}\n          formatter={(x) => [`${x.toFixed(2)}%`, \"MA(7) Annualised Return\"]}\n        />\n        <Legend formatter={(x) => \"MA(7)\"} />\n        <Line\n          type=\"monotoneX\"\n          dataKey=\"return\"\n          stroke={color}\n          activeDot={{ r: 8 }}\n          strokeWidth={3}\n          dot={{\n            stroke: color,\n            fill: color,\n            fillOpacity: 1,\n          }}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst MarginAllocation = ({ data }) => {\n  const theme = useTheme();\n  const text = theme.palette.text.primary;\n  const stroke = theme.palette.background.paper;\n  const colors = [\n    theme.palette.primary.dark,\n    theme.palette.primary.main,\n    theme.palette.primary.light,\n  ];\n  return (\n    <ResponsiveContainer>\n      <PieChart>\n        <Pie\n          dataKey=\"allocation\"\n          nameKey={\"instrument\"}\n          data={data.sort((a, b) => b.allocation - a.allocation)}\n          // cx=\"40%\"\n          // cy={200}\n          labelLine\n          // innerRadius={60}\n          outerRadius={90}\n          // fill={color}\n          stroke={stroke}\n          strokeWidth={3}\n          // paddingAngle={5}\n          // label={(x) => `${x.instrument} (${(x.value * 100).toFixed(0)}%)`}\n          labelStyle={{ color: text, fill: text }}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n          ))}\n        </Pie>\n        <Tooltip formatter={(x) => `${(x * 100).toFixed(0)}%`} />\n        <Legend\n          align=\"right\"\n          verticalAlign=\"middle\"\n          layout=\"vertical\"\n          // height={36}\n          formatter={(instrument, x) =>\n            `${instrument} (${(x.payload.percent * 100).toFixed(0)}%)`\n          }\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paperMessage: {\n    textAlign: \"center\",\n    height: \"400px\",\n    padding: theme.spacing(0),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(4),\n    },\n  },\n  paper: {\n    padding: theme.spacing(1,0),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(4),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"left\",\n    },\n  },\n  descriptionBox: {\n    padding: \"16px\",\n  },\n}));\n\nconst StyledReturn = ({ value }) => {\n  const theme = useTheme();\n  const style = {\n    fontWeight: 500,\n    fontSize: \"2em\",\n  };\n  if (!isNumber(value) || Number.isNaN(value)) {\n    return <span style={style}>N.A.</span>;\n  }\n  return (\n    <span\n      style={{\n        ...style,\n        color:\n          value > 0 ? theme.palette.success.main : theme.palette.error.main,\n      }}\n    >\n      {value > 0 ? (\n        <ArrowUpwardIcon style={{ fontSize: \"0.7em\" }} />\n      ) : (\n        <ArrowDownwardIcon style={{ fontSize: \"0.7em\" }} />\n      )}\n      {`${(Math.abs(value) * 100).toFixed(2)}%`}\n    </span>\n  );\n};\n\nexport const Portfolio = ({\n  fetching,\n  error,\n  walletHistory = [],\n  position = [],\n}) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  if (fetching) {\n    return (\n      <Paper className={classes.paperMessage}>\n        <Grid\n          container\n          justify={\"center\"}\n          alignContent=\"center\"\n          style={{ height: \"100%\" }}\n        >\n          <Grid item>\n            <CircularProgress />\n            <Typography>Retrieving</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n  if (error) {\n    return (\n      <Paper className={classes.paperMessage}>\n        <Grid\n          container\n          justify={\"center\"}\n          alignContent=\"center\"\n          style={{ height: \"100%\" }}\n        >\n          <Grid item>\n            <IconError fontSize=\"large\" color=\"error\" />\n            <Typography color=\"error\">\n              Failed to load data with API keys\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n  if (walletHistory.length === 0 || position.length === 0) {\n    return (\n      <Paper className={classes.paperMessage}>\n        <Grid\n          container\n          justify={\"center\"}\n          alignContent=\"center\"\n          style={{ height: \"100%\" }}\n        >\n          <Grid item>\n            <IconError fontSize=\"large\" />\n            <Typography>\n              Please add your API keys to retrieve portfolio performance\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n\n  const riskFreeRate = 0;\n  const daily = calcBitmexDailyPerformance(walletHistory);\n  const change = daily.map((x) => x.change);\n  const aum = daily[daily.length - 1].balance;\n\n  // Single Numbers\n  const kurtosis = sampleKurtosis(change);\n  const returnLast30Days = changeOverPeriodEnd(change, 30) * 365;\n  const returnLast7Days = changeOverPeriodEnd(change, 7) * 365;\n  const sharpe = sharpeRatio(change, riskFreeRate / 365);\n  const sortino = sortinoRatio(change, riskFreeRate / 365);\n  const skewness = sampleSkewness(change);\n\n  // Arrays\n  const performance = changeRunning(change);\n\n  // const performance = changeOverall(balances);\n  const ma = movingAverage(change, 7);\n  const data = daily.map(({ date, ...x }, i) => ({\n    date: formatDate(date),\n    change: change[i],\n    ...x,\n    balance: x.balance,\n    sevenMA: ma[i] * 365,\n    performance: performance[i],\n  }));\n  console.debug(data);\n\n  const marginSum = sumBy(position, \"maintMargin\");\n  const margin = position.map((x) => ({\n    allocation: x.maintMargin / marginSum,\n    instrument: x.symbol,\n  }));\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h1\" gutterBottom>Portfolio Overview</Typography>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n        style={{ textAlign: \"center\" }}\n      >\n        <Grid item xs={6} md={3}>\n          <Typography align=\"center\" variant=\"caption\">\n            <span\n              style={{\n                fontWeight: 500,\n                fontSize: \"2em\",\n              }}\n            >\n              {`${aum.toFixed(3)} BTC`}\n            </span>\n            <br />\n            AUM\n            <br />\n          </Typography>\n        </Grid>\n        <Grid item xs={6} md={3}>\n          <Typography align=\"center\" variant=\"caption\">\n            <span\n              style={{\n                fontWeight: 500,\n                fontSize: \"2em\",\n                color: theme.palette.primary.main,\n              }}\n            >\n              {sharpe.toFixed(2)}\n            </span>\n            <br />\n            Sharpe Ratio\n          </Typography>\n        </Grid>\n        <Grid item xs={6} md={3}>\n          <Typography align=\"center\" variant=\"caption\">\n            <StyledReturn value={returnLast7Days} />\n            <br />\n            Annualised Return\n            <br />\n            (7 Days)\n          </Typography>\n        </Grid>\n        <Grid item xs={6} md={3}>\n          <Typography align=\"center\" variant=\"caption\">\n            <StyledReturn value={returnLast30Days} />\n            <br />\n            Annualised Return\n            <br />\n            (30 Days)\n          </Typography>\n        </Grid>\n      </Grid>\n      <br />\n      <Divider />\n      <br />\n      <Typography variant=\"h5\" gutterBottom className={classes.heading}>\n        Overall Portfolio Performance\n      </Typography>\n      <div style={{ height: \"350px\", margin: \"24px 8px 16px\" }}>\n        <PerformanceChart data={data} />\n      </div>\n      <br />\n      <Divider />\n      <br />\n      <Typography variant=\"h5\" gutterBottom className={classes.heading}>\n        Annualised Returns\n      </Typography>\n      <div style={{ height: \"350px\", margin: \"24px 8px 16px\" }}>\n        <MovingAverage data={data} />\n      </div>\n      <br />\n      <Divider />\n      <br />\n      <br />\n      <Grid container justify=\"space-around\" spacing={2}>\n        <Grid item xs={12} md={5}>\n          <Typography variant=\"h5\" className={classes.heading}>\n            Current Margin Allocation\n          </Typography>\n          <div style={{ height: \"250px\", margin: \"0 8px\" }}>\n            <MarginAllocation data={margin} />\n          </div>\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Hidden mdUp>\n            <br />\n            <Divider />\n            <br />\n            <br />\n          </Hidden>\n          <Typography variant=\"h5\" className={classes.heading}>\n            Portfolio Indicators\n          </Typography>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableBody>\n                {[\n                  { name: \"\", value: \"\" },\n                  { name: \"Sharpe Ratio\", value: sharpe.toFixed(3) },\n                  { name: \"Sortino Ratio\", value: sortino.toFixed(3) },\n                  { name: \"Skewness\", value: skewness.toFixed(3) },\n                  { name: \"Kurtosis\", value: kurtosis.toFixed(3) },\n                  // { name: \"Alpha\", value: \"96%\" },\n                  // { name: \"Beta\", value: \"-0.05\" },\n                ].map(({ name, value }) => (\n                  <TableRow key={value}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {name}\n                    </TableCell>\n                    <TableCell align=\"right\">{value}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n      {/*<MaterialTable*/}\n      {/*  options={{*/}\n      {/*    padding: \"dense\",*/}\n      {/*    pageSize: 10,*/}\n      {/*    pageSizeOptions: [10, 50, 100],*/}\n      {/*    exportButton: true,*/}\n      {/*    search: false,*/}\n      {/*  }}*/}\n      {/*  columns={[*/}\n      {/*    { title: \"Date\", field: \"date\", defaultSort: \"desc\" },*/}\n      {/*    {*/}\n      {/*      type: \"numeric\",*/}\n      {/*      title: \"Balance\",*/}\n      {/*      field: \"balance\",*/}\n      {/*      render: ({ balance }) => `${balance.toFixed(4)}`,*/}\n      {/*    },*/}\n      {/*    {*/}\n      {/*      type: \"numeric\",*/}\n      {/*      title: \"Net Flow\",*/}\n      {/*      field: \"flow\",*/}\n      {/*      render: ({ flow }) => (flow ? `${flow.toFixed(4)}` : \"-\"),*/}\n      {/*    },*/}\n      {/*    {*/}\n      {/*      title: \"Change\",*/}\n      {/*      field: \"change\",*/}\n      {/*      render: ({ change }) => `${(change * 100).toFixed(2)}%`,*/}\n      {/*      type: \"numeric\",*/}\n      {/*    },*/}\n      {/*  ]}*/}\n      {/*  data={data}*/}\n      {/*/>*/}\n    </Paper>\n  );\n};\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Container } from \"@material-ui/core\";\n\nimport ApiCredentialForm from \"../components/ApiCredentialForm\";\nimport bitmex from \"../services/bitmex\";\nimport { Portfolio } from \"../components/Portfolio\";\n// import {position, walletHistory, walletHistoryLarge} from \"../data\";\n\nconst styles = (theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(4, 2),\n    },\n  },\n});\n\nexport class MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      isAuthOpen: true,\n      error: null,\n      credentials: {},\n      data: {\n        // walletHistory: walletHistory,\n        // position: position,\n      },\n    };\n    this.handleAuthPanelChange = this.handleAuthPanelChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleAuthPanelChange(newState) {\n    this.setState({ isAuthOpen: newState });\n  }\n\n  handleSubmit(credentials) {\n    const { credentials: prev } = this.state;\n    if (\n      credentials.apiKey &&\n      credentials.apiSecret &&\n      (credentials.apiSecret !== prev.apiSecret ||\n        credentials.apiKey !== prev.apiKey)\n    ) {\n      this.setState({\n        credentials,\n        fetching: true,\n      });\n\n      Promise.all([\n        bitmex({ url: \"/position\" }, credentials),\n        bitmex({ url: \"/user/walletHistory\" }, credentials),\n      ])\n        .then((r) => {\n          const [position, walletHistory] = r;\n          this.setState({\n            isAuthOpen: false,\n            fetching: false,\n            data: {\n              position,\n              walletHistory,\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ error, fetching: false });\n        });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { fetching, credentials, data, isAuthOpen, error } = this.state;\n\n    return (\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <ApiCredentialForm\n          open={isAuthOpen}\n          onChange={this.handleAuthPanelChange}\n          initialValues={credentials}\n          onSubmit={(e) => this.handleSubmit(e)}\n        />\n        <Portfolio\n          fetching={fetching}\n          walletHistory={data.walletHistory}\n          position={data.position}\n          error={error}\n        />\n      </Container>\n    );\n  }\n}\nexport default withStyles(styles)(MainPage);\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport themes from \"./styles/theme\";\nimport MainPage from \"./pages/Portfolio\";\n\nfunction App() {\n  const [isDarkTheme, setTheme] = React.useState(true);\n  const theme = createMuiTheme(\n    isDarkTheme ? themes.THEME_DARK : themes.THEME_LIGHT\n  );\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\" style={{ padding: \"0px\" }}>\n        <Toolbar>\n          <Grid container alignItems=\"center\" justify=\"space-between\">\n            <Typography variant=\"h6\">Bitmex Portfolio Viewer</Typography>\n            <Grid item>\n              <Tooltip title=\"Toggle light/dark theme\">\n                <IconButton\n                  onClick={() => setTheme(!isDarkTheme)}\n                  aria-label=\"Toggle light/dark theme\"\n                >\n                  {isDarkTheme ? <BrightnessHighIcon /> : <Brightness4Icon />}\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Github repository\">\n                <IconButton\n                  aria-label=\"Github repository\"\n                  href=\"https://github.com/thetaseek/portfolio-viewer\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <GitHubIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <MainPage />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}